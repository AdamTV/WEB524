@model S2021A3AS.Models.PlaylistEditTracksFormViewModel

@{
    ViewBag.Title = "Edit Playlist:";
}

<h2>@ViewBag.Title <span style="color:black" class="bg-info">&nbsp;@ViewBag.Description&nbsp;</span></h2>
<h4>Select tracks, and click the "Save" button</h4>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        <div class="form-group">
            <div class="col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
                @Html.ActionLink("Back to Details", $"Details/{Model.PlaylistId}") |
                @Html.ActionLink("Back to List", "Index")
            </div>
        </div>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.PlaylistId)
        @Html.HiddenFor(model => model.Name)

        <div class="row">
            <div class="col-md-6">
                <h4>@Html.DisplayNameFor(_ => Model.AllTracksList)</h4>
            </div>
            <div class="col-md-6">
                <h4>@Html.DisplayNameFor(_ => Model.TracksOnPlaylist) <span class="badge">@Html.DisplayFor(modelItem => modelItem.TracksCount)</span></h4>
            </div>
        </div>
        <div class="row">
            <div class="col-md-6">
                @foreach (var item in Model.AllTracksList)
                {
                    var IsOnPlaylist = Model.TracksOnPlaylist.Any(track => track.TrackId.ToString().Equals(item.Value));
                    <div class="form-group">
                        <label>
                            <input type="checkbox" checked="@IsOnPlaylist" name="NewTracksList" value="@item.Value" /> @item.Text
                        </label>
                    </div>
                }
            </div>
            <div class="col-md-6 well">
                @foreach (var item in Model.TracksOnPlaylist)
                {
                    <p style="background-color: inherit; color: black">@Html.DisplayFor(_ => item.NameShort)</p>
                }
            </div>
        </div>

        @*<div class="form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.TracksCount, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.TracksCount, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.TracksCount, "", new { @class = "text-danger" })
                </div>
            </div>*@
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
