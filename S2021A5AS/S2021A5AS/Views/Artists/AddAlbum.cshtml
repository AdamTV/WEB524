@model S2021A5AS.Models.AlbumAddFormViewModel

@{
    ViewBag.Title = $"Add Album for Artist {Model.ArtistName}";
}

<h2>@ViewBag.Title</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>Complete the form, and click the Create button</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @*<div class="form-group">
        @Html.LabelFor(model => model.Coordinator, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Coordinator, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Coordinator, "", new { @class = "text-danger" })
        </div>
    </div>*@

    <div class="form-group">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ReleaseDate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ReleaseDate, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ReleaseDate, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.UrlAlbum, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.UrlAlbum, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.UrlAlbum, "", new { @class = "text-danger" })
        </div>
    </div>

    @*<div class="form-group">
        @Html.LabelFor(model => model.ArtistName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ArtistName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ArtistName, "", new { @class = "text-danger" })
        </div>
    </div>*@

    <div class="form-group">
        @Html.LabelFor(model => model.GenreList,
            htmlAttributes: new { @class = "control-label col-md-2" })

        <div class="col-md-10">
            @Html.DropDownList("Genre", Model.GenreList,
               htmlAttributes: new { @class = "form-control", @id = "GenreList" })

            @Html.ValidationMessageFor(model => model.GenreList, "",
               new { @class = "text-danger" })
        </div>
    </div>

    <div class="row">
        <div class="col-md-3 col-md-offset-2 well">
            <h4>@Html.DisplayNameFor(_ => Model.ArtistList)</h4>
            @foreach (var item in Model.ArtistList)
            {
                var IsSelected = ViewBag.currentArtistId == Convert.ToInt32(item.Value);
                <div class="form-group">
                    <label>
                        <input type="checkbox" checked="@IsSelected" name="ArtistIds" value="@item.Value" /> @item.Text
                    </label>
                </div>
            }
        </div>
        <div class="col-md-3 col-md-offset-1 well">
            <h4>@Html.DisplayNameFor(_ => Model.TracksList)</h4>
            @foreach (var item in Model.TracksList)
            {
                <div class="form-group">
                    <label>
                        <input type="checkbox" name="TrackIds" value="@item.Value" /> @item.Text
                    </label>
                </div>}
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
